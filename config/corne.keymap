/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";
                default_layer {
                        bindings = <
   &kp TAB   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O    &kp P        &kp BSPC
   &kp LSHFT &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L    &kp SEMI     &kp RET
   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp LEFT &kp QUESTION &kp DOT
                    &trans &mo 1 &kp SPACE   &kp SPACE &mo 2 &kp RALT
                        >;
                };
                lower_layer {
                        bindings = <
   &kp TAB   &kp N1 &kp N2 &kp N3  &kp N4 &kp N5     &kp N6 &kp N7 &kp N8 &kp N9   &kp N0   &none
   &trans    &none  &none  &none   &none  &none      &none  &none  &none  &none    &kp UP   &trans 
   &trans    &none  &none  &none   &none  &none      &none  &none  &none  &kp LEFT &kp DOWN &kp RIGHT
                          &trans  &trans &trans      &trans &trans &trans 
                        >;
                };

                raise_layer {
                        bindings = <
   &kp ESC &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp DEL
   &trans    &none    &none  &none    &none    &none       &none     &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &trans
   &trans    &none    &none  &none    &none    &none       &none     &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &trans   &trans   &trans      &trans    &trans    &trans 
                        >;
                };

                admin_layer {
                        bindings = <
   &none      &none        &none        &none        &none  &none      &none  &none  &none  &none    &none    &none
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &none  &none      &none  &none  &none  &none    &none    &none
   &none      &none        &none        &none        &none  &none      &none  &none  &none  &none    &none    &none
                                        &none        &none  &none      &none  &none  &none 
                        >;
                };
        };
};

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
